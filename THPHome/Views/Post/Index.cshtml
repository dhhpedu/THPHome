@model Post
@using ApplicationCore.Entities
@using THPIdentity.Entities
@using WebUI.Entities;
@using WebUI.Models.Layouts;
@using Microsoft.AspNetCore.Identity;
@using THPHome.Entities;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categories = (List<Category>)ViewBag.Categories;
    var listBanner = (List<ApplicationCore.Entities.Banner>)ViewBag.ListBanner;
    var attachments = ViewBag.Attachments as List<ApplicationCore.Entities.Attachment>;
    var relateds = ViewBag.RelatedPosts as List<Post>;
    var breadcrumbs = new List<Breadcrumb>
{
        new Breadcrumb { Id = 1, Name = "Trang chủ", Url = "/", Icon ="fas fa-home" }
    };
    for (int i = 0; i < categories.Count(); i++)
    {
        breadcrumbs.Add(new Breadcrumb { Id = i + 2, Name = categories[i].Name ?? string.Empty, Url = $"/category/details/{categories[i].Id}", Icon = "fas fa-folder" });
    }
}

<partial name="/Views/Components/_Breadcrumb.cshtml" model="breadcrumbs" />
<div class="md:flex">
    <div class="md:w-8/12 md:mr-1">
        <h1 class="p-2 bg-gray-800 text-white font-bold rounded-t">
            @Model.Title
        </h1>
        <div class="p-2 shadow overflow-auto">
            <div class="font-bold mb-3">
                @Html.Raw(Model.Description)
            </div>
            <div class="mb-3 ql-editor post">
                @Html.Raw(Model.Content)
            </div>
            @if (!string.IsNullOrEmpty(Model.Tags))
            {
                <div class="mb-2">
                    <i class="fas fa-tag mr-2"></i>
                    @{
                        var listTag = Model.Tags.Split(",");
                        foreach (var item in listTag)
                        {
                            <a href="/post/tag?name=@item" class="px-4 py-1 rounded-full bg-gray-800 hover:bg-gray-900 text-white mr-2 text-sm hover:text-white">@item</a>
                        };
                    }
                </div>
            }
        </div>

        <div class="flex p-2 justify-between text-sm bg-gray-200 shadow mb-3">
            <div class="post-info">
                <span class="mr-2">
                    <i class="fas fa-clock"></i>
                    @Model.ModifiedDate
                </span>
                <span>
                    <i class="fa fa-eye"></i> @(Model.View.ToString("N0"))
                </span>
            </div>
            <button type="button" data-toggle="modal" data-target="report-modal"><i class="fa fa-flag"></i></button>
        </div>

        @if (attachments != null && attachments.Count > 0)
        {
            <div class="title">Tệp tin đính kèm</div>
            <div class="p-2 shadow mb-3">
                @foreach (var item in attachments)
                {
                    if (item.Extension == ".pdf")
                    {
                        <embed src="/files/@($"{item.Id}{item.Extension}")" style="width: 100%; height: 800px" type="application/pdf">
                    }
                    else
                    {
                        <div class="py-2">
                            <i class="fas fa-file mr-1"></i>
                            <a href="/files/@($"{item.Id}{item.Extension}")">@item.Name</a>
                        </div>
                    }
                }
            </div>
        }

        @if (relateds != null)
        {
            <div class="related mb-4">
                <h1 class="p-2 bg-gray-800 text-white font-bold rounded-t">
                    Bài viết liên quan
                </h1>
                @foreach (var item in relateds)
                {
                    <div class="px-2 py-1 border-b border-r border-l">
                        <i class="fab fa-staylinked mr-1 me-1"></i>
                        <a href="/post/@item.Url">@item.Title</a> <i class="text-muted text-sm">(@item.IssuedDate.ToString("dd/MM/yyyy"))</i>
                    </div>
                }
            </div>
        }
    </div>
    <div class="md:w-4/12 md:ml-1">
        <div class="mb-4">
            <partial name="/Views/Shared/_RandomPost.cshtml" model="ViewBag.RandomPosts" />
        </div>
        @if (listBanner.Count() > 0)
        {
            foreach (var item in listBanner)
            {
                <a href="@item.Url" class="block bg-gray-900 mb-3">
                    <img src="@item.Image" alt="@item.Name" class="w-100 object-cover transition hover:opacity-50 duration-700" />
                </a>
            }
        }
    </div>
</div>

<div class="fixed z-10 inset-0 overflow-y-auto hidden" id="report-modal">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 transition-opacity" aria-hidden="true">
            <div class="absolute inset-0 bg-gray-900 opacity-75"></div>
        </div>

        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full" role="dialog" aria-modal="true" aria-labelledby="modal-headline">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="flex items-center mb-3">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-8 w-8 rounded-full bg-red-100 sm:mx-0">
                        <svg class="h-5 w-5 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                        </svg>
                    </div>
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left flex-grow">
                        <h3 class="text-lg leading-6 font-medium text-gray-900">
                            Góp ý - Báo lỗi
                        </h3>
                    </div>
                </div>
                <textarea placeholder="Nhập nội dung..." class="border w-full p-3" id="report-message"></textarea>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button type="button" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm" onclick="sendReport()">
                    Gửi
                </button>
                <button type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm" data-target="report-modal" data-toggle="modal">
                    Hủy
                </button>
            </div>
        </div>
    </div>
</div>

<div class="fixed z-10 inset-0 overflow-y-auto hidden" id="report-thank">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 transition-opacity" aria-hidden="true">
            <div class="absolute inset-0 bg-gray-900 opacity-75"></div>
        </div>

        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full" role="dialog" aria-modal="true" aria-labelledby="modal-headline">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="flex justify-center mb-3">
                    <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-green-100 sm:mx-0">
                        <i class="fas fa-check text-green-600 fa-2x"></i>
                    </div>
                </div>
                <div class="p-3 text-center">
                    <div class="mb-3 font-bold text-xl">
                        Gửi tin nhắn thành công
                    </div>
                    <div class="text-gray-700">
                        Cám ơn bạn đã gửi tin nhắn cho chúng tôi. Hi vọng bạn sẽ có những trải nghiệm tuyệt vời hơn trên <span class="text-gray-700">DefZone</span>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm" data-target="report-thank" data-toggle="modal">
                    Đóng
                </button>
            </div>
        </div>
    </div>
</div>

@{
    var context = "\"@context\": \"https://schema.org\"";
    var type = "\"@type\": \"NewsArticle\"";
    var id = "\"@id\": \"https://google.com/article\"";
    var type2 = "\"@type\": \"WebPage\"";
    var type3 = "\"@type\": \"Person\"";
    var type4 = "\"@type\": \"Organization\"";
    var type5 = "\"@type\": \"ImageObject\"";
}

@section scripts {
    <script async charset="utf-8" src="//cdn.embedly.com/widgets/platform.js"></script>
    <script>
        document.querySelectorAll('oembed[url]').forEach(element => {
            // Discover the media.
            const anchor = document.createElement('a');

            anchor.setAttribute('href', element.getAttribute('url'));
            anchor.className = 'embedly-card';

            element.appendChild(anchor);
        });

        function sendReport() {
            let reportMessage = document.getElementById('report-message');
            if (!reportMessage) {
                return;
            }
            $.ajax({
                url: '/post/sendreport',
                method: 'POST',
                data: {
                    id: '@Model.Id',
                    message: reportMessage.value
                }
            }).done(() => {
                document.getElementById('report-modal').classList.add('hidden');
                document.getElementById('report-thank').classList.remove('hidden');
            })
        }
    </script>
    <script type="application/ld+json">
        {
        @Html.Raw(context),
        @Html.Raw(type),
        "mainEntityOfPage": {
        @Html.Raw(type2),
        @Html.Raw(id)
        },
        "headline": "@Model.Title.Replace("\"", "")",
        "image": [
        "@Model.Thumbnail"
        ],
        "datePublished": "@Model.CreatedDate.ToString("o")",
        "dateModified": "@Model.ModifiedDate?.ToString("o")",
        "author": {
        @Html.Raw(type3),
        "name": "Đinh Công Tân"
        },
        "publisher": {
        @Html.Raw(type4),
        "name": "defzone.net",
        "logo": {
        @Html.Raw(type5),
        "url": "https://defzone.net/img/logo/logo.png"
        }
        },
        "description": "@Model.Description?.Replace("\"", "")"
        }
    </script>
}
